version: '3'
services:
  unittest:
    image: fniessink/next-action-dev:latest
    working_dir: ${PWD}
    command: ci/unittest.sh
  behave:
    image: fniessink/next-action-dev:latest
    working_dir: ${PWD}
    command: ci/behave.sh
  security:
    image: fniessink/next-action-dev:latest
    working_dir: ${PWD}
    command: ci/security.sh
  owasp-dependency-check:
    image: owasp/dependency-check:latest
    command: /usr/share/dependency-check/bin/dependency-check.sh --scan /src --format "ALL" --project "OWASP Dependency Check" --out /report
  quality:
    image: fniessink/next-action-dev:latest
    working_dir: ${PWD}
    command: ci/quality.sh
  docs:
    image: fniessink/next-action-dev:latest
    working_dir: ${PWD}
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    command: ci/docs.sh
  codacy:
    image: fniessink/next-action-dev:latest
    working_dir: ${PWD}
    volumes:
    - ${PWD}:${PWD}
    command: sh -c 'python-codacy-coverage -r build/unittest-coverage.xml'
    environment:
    - CODACY_PROJECT_TOKEN
  sonarcloud-scanner:
    image: fniessink/next-action-dev:latest
    working_dir: ${PWD}
    environment:
    - SONAR_TOKEN
    volumes:
    - ${PWD}:${PWD}
    # SonarQube needs Xunit format, see https://docs.sonarqube.org/display/PLUG/Python+Unit+Tests+Execution+Reports+Import
    command: sh -c 'nosetests --nocapture --with-xunit --xunit-file=build/nosetests.xml tests/unittests; sonar-scanner -Dsonar.host.url=http://sonarcloud.io -Dsonar.organization=fniessink-github -Dsonar.login=$${SONAR_TOKEN}'
  sonarqube-scanner:
    image: fniessink/next-action-dev:latest
    working_dir: ${PWD}
    command: sh -c 'nosetests --nocapture --with-xunit --xunit-file=build/nosetests.xml tests/unittests; sonar-scanner -Dsonar.host.url=$$SONARQUBE_URL -Dsonar.login=`python utils/sonarqube_token.py $$SONARQUBE_URL`'
  sonarqube-server:
    image: sonarqube:7.1-alpine
    container_name: sonarqube
    ports:
    - "9000:9000"
    - "9002:9002"
  jenkins:
    image: trion/jenkins-docker-client
    container_name: jenkins
    ports:
    - "8080:8080"
    - "50000:5000"
    environment:
    - JENKINS_HOME_ON_HOST=${PWD}/.jenkins
    volumes:
    - ${PWD}/.jenkins:/var/jenkins_home
    - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
    - sonarqube-server
  release:
    image: fniessink/next-action-dev:latest
    working_dir: ${PWD}
    volumes:
    - ${PWD}:${PWD}
    command: sh -c 'rm -rf dist; python setup.py sdist bdist_wheel; twine check dist/*; twine upload dist/*'
    environment:
    - TWINE_USERNAME
    - TWINE_PASSWORD
